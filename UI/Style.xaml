<ResourceDictionary x:Class="UI.Style"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:UI"
      mc:Ignorable="d" >
     <BitmapImage x:Key="Applay" UriSource="icons\success.png" />
     <BitmapImage x:Key="Delete" UriSource="icons\error.png"/>
    
    <!--מטרה: לסדר את הסטיילים הפחות או יותר קבועים במקום אחד. יש גם סטיילים לא קבועים שמתוארים בדף שלהם-->
    <Style x:Key="InvisibleWhenDisabled" TargetType="{x:Type UserControl}">
      <Style.Triggers>
          <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
          </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Font Color:#FF084B29
    Bacground Color:#B2FFFFFF
    BorderColor=Font Color
    FontFamily: "Segoe Print"
    -->
    <!--Font Color: buttons=#FF084B29/text=#FF084B29
    Bacground Color:#B2FFFFFF
    BorderColor=Font Color
    FontFamily: "Segoe Print"
    Help(objects) color=#B2FFFFFF
    -->
    <!--hirarcy of Styles to buttons-->
    <Style x:Key="DefaultStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#FF084B29"/>
        <Setter Property="Background" Value="#B2FFFFFF"/>
        <Setter Property="FontFamily" Value="Segoe Print" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Border.CornerRadius" Value="10,10,10,10" />
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="BorderBrush" Value="#FF084B29" />
    

   </Style>
    
    <!---#FFC7F4A1, #FF9BE5FE, #FF91B3FB, #FF0CA17D,#FFFF5555-->

    <Style x:Key="desk"  BasedOn="{StaticResource DefaultStyle}" TargetType="Button">
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="BorderBrush" Value="#99000000"/>
            <Setter Property="Width" Value="{Binding ElementName=Grid.ColumnDefinitions , Path=ActualWidth}"/>
            <Setter Property="Height" Value="{Binding ElementName=Grid.RowDefinitions , Path=ActualWidth}"/>
            <Setter Property="ClickMode" Value="Press"/>
            
<Setter Property="Template"><!--for the corner radius-->
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="{TemplateBinding Border.CornerRadius}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF084B29" />
                    <Setter Property="Foreground" Value="#B2FFFFFF"/>
               <!-- <Setter Property="BorderBrush" Value="{Binding ElementName=Self,Path=Foreground}"/>-->

            </Trigger>
           
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF084B29"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border CornerRadius="{TemplateBinding Border.CornerRadius}"
                                Background="#B2BBBABA" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

        </Style.Triggers>
        </Style>
    <Style x:Key="ApllayButton" TargetType="Button" BasedOn="{StaticResource desk}">
        <Setter Property="Content" >
            <Setter.Value>
                <Image  Source="{DynamicResource Applay}"  />
            </Setter.Value></Setter>
            <Setter Property="Height" Value="30" />
    </Style>

        <!--TextBlock Style-->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="Foreground" Value="#FF084B29"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontFamily" Value="Segoe Print"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Height" Value="50"/>
    </Style>

    <!--Label Style-->
    <Style x:Key="LabelsStyle" TargetType="Label">
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="Foreground" Value="#FF084B29"/>
        <Setter Property="FontFamily" Value="Segoe Print"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>

    </Style>

    <!--TextBox Style-->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="#B2FFFFFF"/>
        <Setter Property="Foreground" Value="#FF084B29"/>
        <Setter Property="BorderBrush" Value="#FF084B29"/>
        <Setter Property="FontFamily" Value="Segoe Print"/>
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0,0,0,3"/>

        <Setter Property="MinWidth" Value="60"/>
    </Style>

    <Style x:Key="ComboboxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="#FF084B29"/>
            <Setter Property="FontFamily" Value="Segoe Print"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Border.CornerRadius" Value="9,9,9,9" />
    </Style>
    <!--StackPanel Style-->
    <Style x:Key="StackpannelStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
     
    </Style>
    <!--chekBox Style-->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">

        <Setter Property="BorderBrush" Value="#FF084B29"/>
        <Setter Property="BorderThickness" Value="2,2,2,2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

    </Style>


</ResourceDictionary>




